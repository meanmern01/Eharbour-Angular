stages:
  - build_staging
  - deploy_staging
variables:
  TAG_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  TAG_COMMIT: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
build_staging:
  stage: build_staging
  image: docker:latest
  only:
    - "staging"
  services:
    - docker:dind
  script:
    - docker build -t $TAG_COMMIT -t $TAG_LATEST .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $TAG_COMMIT
    - docker push $TAG_LATEST
deploy_staging:
  stage: deploy_staging
  image: alpine:latest
  only:
    - "staging"
  before_script:
    - apk add --update openssh-client bash git
    - 'which ssh-agent || ( apk add openssh-client )'
    - eval $(ssh-agent -s)
    - bash -c 'ssh-add <(echo "$STAGING_SERVER_PRIVATE_KEY")'
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    # - chmod ogu=rwx $SERVER_PRIVATE_KEY_FILE
    - ssh $STAGING_SERVER_USERNAME@$STAGING_SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh $STAGING_SERVER_USERNAME@$STAGING_SERVER_IP "docker pull $TAG_LATEST"
    - ssh $STAGING_SERVER_USERNAME@$STAGING_SERVER_IP "docker container rm -f eharbour-ui || true"
    - ssh $STAGING_SERVER_USERNAME@$STAGING_SERVER_IP "cd ~/eharbour;docker-compose stop eharbour-ui;docker-compose rm eharbour-ui;docker-compose -f docker-compose.yml up -d eharbour-ui"
  environment:
    name: staging
    url: http://$STAGING_SERVER_IP
